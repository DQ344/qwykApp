// import type { IResponse } from "@/common/type/http.uts"
// import { BASE_URL, TIME_OUT } from "@/config/index.uts"
// import type { IResponse } from "@/common/type/http.uts"
// export default class Http {
// 	static post(url: string, data: any) {
// 		console.log('data', data);
// 		uni.request({
// 			url: BASE_URL + url,
// 			timeout: TIME_OUT,
// 			method: 'POST',
// 			data,
// 			dataType: 'json',
// 			success: (res) => {
// 				console.log(res);
// 			},
// 			fail: (err) => {
// 				console.log(err);
// 			}
// 		})
// 	} 
// }

// import utils from '@/utils/utils.uts';

// // 2.uniapp 拦截器

// // 白名单，不需要携带token就允许被访问的接口
// const whiteApiList = ['/qywk/login/normal']

// export const interceptor = () => {

//   uni.addInterceptor('request', {
  
//   // 请求拦截器
//     invoke(args: any) {
    
//     // 加载loading
//       uni.showLoading({
//         title: '加载中...'
//       })
      
//       // 当本地没有token，并且接口地址没在白名单内，一律跳转登录页面
//       if (!utils.getStoreageSync('token') && !whiteApiList.includes(args.url)) {
//         utils.quickNavigateTo('/pages/login/login.uvue')
//         uni.hideLoading()
//         return false
//       }
//       // request 触发前拼接 url
//       args.url =  BASE_URL + args.url
      
//       //设置请求头及token
//       args.header = {
//         // 'content-type': args.method === 'POST' ? 'application/json' : 'application/x-www-form-urlencoded',
//         'Authori-zation': + utils.getStoreageSync('token')
//       }
//       console.log('请求拦截器中的请求头', args.header)
//     },
    
//     // 响应拦截器，可以对数据进行预处理
//     success(args: any) {
//       uni.hideLoading()
      
//     },
//     fail(err: any) {
//       console.log('interceptor-fail', err)
//       console.log('请求失败')
//       uni.hideLoading()
//     },
//     complete(res: any) {
//       uni.hideLoading()
//     }
//   })
// }
