
	type plantListType = { __$originalPosition: UTSSourceMapPosition<"plantListType", "pages/showWindow/showWindow.uvue", 18, 7>;
		imgUrl: string
		isUnlock: boolean
	}
	
	export default {
		data() {
			return {
				plantListData:[
					{
						imgUrl: '/static/image/showWindow/Unlocked_hawthorn.png',
						isUnlock: true
					},
					{
						imgUrl: '/static/image/showWindow/Unlocked_ginseng.png',
						isUnlock: true
					},
					{
						imgUrl: '/static/image/showWindow/Unlocked_peony.png',
						isUnlock: true
					},
					{
						imgUrl: '/static/image/showWindow/Not_Unlocked_1.png',
						isUnlock: false
					},
					{
						imgUrl: '/static/image/showWindow/Not_Unlocked_2.png',
						isUnlock: false,
					},
					{
						imgUrl: '/static/image/showWindow/Not_Unlocked_3.png',
						isUnlock: false,
					},
					
					{
						imgUrl: '/static/image/showWindow/Not_Unlocked_1.png',
						isUnlock: false
					},
					{
						imgUrl: '/static/image/showWindow/Not_Unlocked_2.png',
						isUnlock: false,
					},
					
				] as plantListType[]
			};
		},
		methods: {
			clickPlant(item:any, index:number) {
				uni.navigateTo({
					url: '/pages/plantDetail/plantDetail'
				})
			}
		}
	}


function GenPagesShowWindowShowWindowRender(): any | null {
const _ctx = this
const _cache = this.$.renderCache
  return createElementVNode("scroll-view", utsMapOf({
    class: "show-window",
    direction: "vertical"
  }), [
    createElementVNode("text", utsMapOf({
      style: normalizeStyle(utsMapOf({"color":"#383838","font-size":"32rpx"}))
    }), "植物收集进度", 4 /* STYLE */),
    createElementVNode("text", utsMapOf({
      class: "mt-1",
      style: normalizeStyle(utsMapOf({"color":"#3C6A5D","font-weight":"700","font-size":"40rpx"}))
    }), "3/16", 4 /* STYLE */),
    createElementVNode("text", utsMapOf({
      class: "mt-2",
      style: normalizeStyle(utsMapOf({"color":"#a6a6a6","font-size":"32rpx"}))
    }), "轻松培养健康生活习惯", 4 /* STYLE */),
    createElementVNode("view", utsMapOf({ class: "list mt-3" }), [
      createElementVNode(Fragment, null, RenderHelpers.renderList(_ctx.plantListData, (item, index, _, _): VNode => {
        return createElementVNode("view", utsMapOf({
          key: index,
          onClick: () => {_ctx.clickPlant(item, index)}
        }), [
          createElementVNode("image", utsMapOf({
            class: "img",
            src: item.imgUrl,
            mode: "widthFix"
          }), null, 8 /* PROPS */, ["src"]),
          item.isUnlock === false
            ? createElementVNode("text", utsMapOf({
                key: 0,
                class: "text"
              }), "未解锁")
            : createCommentVNode("v-if", true)
        ], 8 /* PROPS */, ["onClick"])
      }), 128 /* KEYED_FRAGMENT */)
    ])
  ])
}
const GenPagesShowWindowShowWindowStyles = [utsMapOf([["show-window", padStyleMapOf(utsMapOf([["boxSizing", "border-box"], ["display", "flex"], ["flexDirection", "column"], ["alignItems", "center"], ["backgroundColor", "#f8f5ed"], ["paddingTop", "100rpx"], ["paddingRight", "36rpx"], ["paddingBottom", 0], ["paddingLeft", "36rpx"]]))], ["list", padStyleMapOf(utsMapOf([["width", "100%"], ["boxSizing", "border-box"], ["display", "flex"], ["justifyContent", "space-around"], ["flexDirection", "row"], ["flexWrap", "wrap"]]))], ["img", utsMapOf([[".list ", utsMapOf([["width", "310rpx"], ["marginBottom", 16], ["position", "relative"]])]])], ["text", utsMapOf([[".list ", utsMapOf([["position", "absolute"], ["left", 0], ["top", 0], ["width", "100rpx"], ["height", "40rpx"], ["borderRadius", "40rpx"], ["backgroundColor", "#d6aaa7"], ["lineHeight", "40rpx"], ["textAlign", "center"], ["color", "#ffffff"], ["fontSize", "24rpx"]])]])]])]
