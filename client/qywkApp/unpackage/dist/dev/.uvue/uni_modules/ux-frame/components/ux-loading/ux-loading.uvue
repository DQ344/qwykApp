
	import { UxLoadingMixin } from './index.uts'
	
	/**
	 * loading 加载
	 * @description 加载中动画组件
	 * @tutorial https://www.uxframe.cn/component/display/loading.html
	 * @property {String} 			type = [circular|spinner] 	String | loading类型 (默认 spinner)
	 * @value circular 圆环
	 * @value spinner 菊花
	 * @property {String}			color						String | loading颜色 (默认 #999999)
	 * @property {Number}			size						Number | loading大小 (默认 16)
	 * @property {String} 			textColor 					String | 文案颜色
	 * @property {Number} 			textSize 					Number | 文案字体大小  (默认 12)
	 * @property {Boolean}			bold = [true|false]			Boolean | 文字加粗 (默认 false)
	 * @author UxFrame
	 * @date 2023-11-04 01:38:10
	 */
	export default {
		name: 'ux-loading',
		mixins: [UxLoadingMixin]
	}


function GenUniModulesUxFrameComponentsUxLoadingUxLoadingRender(): any | null {
const _ctx = this
const _cache = this.$.renderCache
  return createElementVNode("view", utsMapOf({ class: "ux-loading" }), [
    createElementVNode("view", utsMapOf({
      ref: "ux-loading",
      class: "ux-loading__icon",
      style: normalizeStyle([_ctx.style])
    }), null, 4 /* STYLE */),
    _ctx.$slots['default'] != null
      ? createElementVNode("text", utsMapOf({
          key: 0,
          class: "ux-loading__text",
          style: normalizeStyle([_ctx.textStyle])
        }), [
          renderSlot(_ctx.$slots, "default")
        ], 4 /* STYLE */)
      : createCommentVNode("v-if", true)
  ])
}
const GenUniModulesUxFrameComponentsUxLoadingUxLoadingStyles = [utsMapOf([["ux-loading", padStyleMapOf(utsMapOf([["display", "flex"], ["flexDirection", "row"], ["alignItems", "center"]]))], ["ux-loading__icon", padStyleMapOf(utsMapOf([["width", 20], ["height", 20]]))], ["ux-loading__img", padStyleMapOf(utsMapOf([["width", 20], ["height", 20]]))], ["ux-loading__text", padStyleMapOf(utsMapOf([["marginLeft", 8], ["color", "#999999"], ["fontSize", 12]]))]])]
