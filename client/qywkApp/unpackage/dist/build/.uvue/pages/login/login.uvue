
	import type { TloginInfo, IToken } from "@/common/type/user.uts"
	import type { IResponse } from "@/common/type/http.uts"
	import { BASE_URL } from "@/config/index.uts"
	
	// import Http from "@/utils/http"
	// import utils from "@/utils/utils.uts"
	
	export default {
		data() {
			return {
				loginInfo: {
					userId: '',
					password: ''
				} as TloginInfo
			}
		},
		methods: {
			clickLogin() {
				if((this.loginInfo.userId.length <= 0) || (this.loginInfo.password.length <= 0)) return 
				
				console.log(this.loginInfo);
				// Http.post('/qywk/login/normal', this.loginInfo)
				uni.request<IResponse<IToken>>({
					url: BASE_URL + '/user/login/normal',
					method: 'POST',
					data: {
						userId: this.loginInfo.userId,
						password: this.loginInfo.password
					},
					dataType: 'json',
					success: (res) => {
						let r = res.data
						console.log('登录返回信息', r);
						if(r!.code == 200) {
							uni.setStorageSync('token', r!.data!.token)
							uni.reLaunch({
								url: '/pages/tabbar/tabbar',
							})
						} else {
							
							uni.showToast({
								title: "账号或密码错误",
								icon: "none"
							})
						}
						
					},
					fail: (err) => {
						console.log(err);
						uni.showToast({
							title: "账号或密码错误",
							icon: "none"
						})
					}
				})

			}
		}
	}


function GenPagesLoginLoginRender(): any | null {
const _ctx = this
const _cache = this.$.renderCache
  return createElementVNode("view", utsMapOf({ class: "login" }), [
    createElementVNode("image", utsMapOf({
      class: "bg-img",
      src: "/static/image/login/bg.png",
      mode: "widthFix"
    })),
    createElementVNode("view", utsMapOf({ class: "window flex flex-column align-center" }), [
      createElementVNode("view", utsMapOf({ class: "top flex align-center" }), [
        createElementVNode("image", utsMapOf({
          src: "/static/image/login/chacha.png",
          mode: "widthFix",
          style: normalizeStyle(utsMapOf({"width":"36rpx","margin-right":"10rpx"}))
        }), null, 4),
        createElementVNode("text", utsMapOf({ class: "title justify-start" }), "登录")
      ]),
      createElementVNode("input", utsMapOf({
        modelValue: _ctx.loginInfo.userId,
        onInput: ($event: InputEvent) => {(_ctx.loginInfo.userId) = $event.detail.value},
        class: "uni-input space",
        placeholder: "账号/手机号"
      }), null, 40, ["modelValue", "onInput"]),
      createElementVNode("input", utsMapOf({
        modelValue: _ctx.loginInfo.password,
        onInput: ($event: InputEvent) => {(_ctx.loginInfo.password) = $event.detail.value},
        class: "uni-input space",
        password: "",
        type: "text",
        placeholder: "密码"
      }), null, 40, ["modelValue", "onInput"]),
      createElementVNode("button", utsMapOf({
        class: "space",
        "hover-class": "btn-hover",
        onClick: _ctx.clickLogin,
        style: normalizeStyle(utsMapOf({"width":"600rpx","height":"76rpx","border-radius":"32rpx","color":"#fff","line-height":"76rpx","text-align":"center","background-color":"#b19983"}))
      }), "登录", 12, ["onClick"]),
      createElementVNode("view", utsMapOf({ class: "sub space flex justify-between" }), [
        createElementVNode("view", utsMapOf({ class: "forget" }), [
          createElementVNode("text", utsMapOf({ class: "text" }), "忘记密码")
        ]),
        createElementVNode("view", utsMapOf({ class: "sign-up" }), [
          createElementVNode("text", utsMapOf({ class: "text" }), "手机注册")
        ])
      ]),
      createElementVNode("view", utsMapOf({ class: "icons flex justify-around" }), [
        createElementVNode("image", utsMapOf({
          class: "img-icon",
          src: "/static/image/login/QQ.png",
          mode: "widthFix"
        })),
        createElementVNode("image", utsMapOf({
          class: "img-icon",
          src: "/static/image/login/weixin.png",
          mode: "widthFix"
        })),
        createElementVNode("image", utsMapOf({
          class: "img-icon",
          src: "/static/image/login/weibo.png",
          mode: "widthFix"
        }))
      ])
    ])
  ])
}
const GenPagesLoginLoginStyles = [utsMapOf([["login", padStyleMapOf(utsMapOf([["width", "100%"], ["height", "100%"], ["backgroundColor", "#f2eee9"]]))], ["bg-img", utsMapOf([[".login ", utsMapOf([["width", "750rpx"], ["position", "absolute"], ["top", 0]])]])], ["window", utsMapOf([[".login ", utsMapOf([["boxSizing", "border-box"], ["width", "650rpx"], ["height", "766rpx"], ["paddingTop", "30rpx"], ["paddingRight", "30rpx"], ["paddingBottom", "30rpx"], ["paddingLeft", "30rpx"], ["marginTop", "300rpx"], ["marginRight", "auto"], ["marginBottom", 0], ["marginLeft", "auto"], ["backgroundColor", "#f5f5f5"], ["borderRadius", "48rpx"]])]])], ["space", utsMapOf([[".login .window ", utsMapOf([["marginBottom", "62rpx"]])]])], ["top", utsMapOf([[".login .window ", utsMapOf([["width", "600rpx"], ["marginBottom", "64rpx"]])]])], ["title", utsMapOf([[".login .window .top ", utsMapOf([["fontSize", 16], ["color", "#937152"]])]])], ["uni-input", utsMapOf([[".login .window ", utsMapOf([["width", "600rpx"], ["height", "76rpx"], ["borderRadius", "32rpx"], ["marginTop", 0], ["marginRight", "auto"], ["marginBottom", 0], ["marginLeft", "auto"], ["paddingLeft", 10], ["fontSize", 12], ["backgroundColor", "#f2eee9"], ["fontSize::placeholder", "28rpx"], ["marginLeft::placeholder", "100rpx"]])]])], ["btn-hover", utsMapOf([[".login .window ", utsMapOf([["backgroundColor", "#94806e"]])]])], ["sub", utsMapOf([[".login .window ", utsMapOf([["width", "600rpx"]])]])], ["text", utsMapOf([[".login .window .sub ", utsMapOf([["fontSize", 12], ["color", "#937152"]])]])], ["icons", utsMapOf([[".login .window ", utsMapOf([["width", "500rpx"], ["height", "56rpx"]])]])], ["img-icon", utsMapOf([[".login .window .icons ", utsMapOf([["width", "56rpx"], ["height", "56rpx"]])]])]])]
