<template>
	<view class="validateCode">
		<image class="bg-img" src="../../static/image/login/bg.png" mode="widthFix"></image>
		<view class="window flex flex-column  align-center">
			<view class="top flex align-center">
				<image src="../../static/image/login/chacha.png" mode="widthFix" style="width: 36rpx;margin-right: 10rpx;"></image>
				<text class="title">注册并登录</text>
			</view>
			<input v-model="registerLoginInfo.password" class="uni-input space" placeholder="密码" />
			<input v-model="registerLoginInfo.code" class="uni-input space" placeholder="验证码" />
			<button class="space" hover-class="btn-hover" @click="clickRegiter"
				style="width: 600rpx;height: 76rpx;border-radius: 32rpx;color: #fff;line-height: 76rpx;text-align: center;background-color: #b19983;">注册并登录</button>
		</view>
	</view>
</template>

<script>
	import type { IToken } from "@/common/type/user.uts"
	import type { IResponse } from "@/common/type/http.uts"
	import { BASE_URL } from "@/config/index.uts"
	
	type registerLoginInfoType = {
		tel:string
		password: string
		code: string
	}
	
	export default {
		data() {
			return {
				registerLoginInfo: {
					tel: '',  // 手机号
					password: '',  // 密码
					code: '',   // 验证码
				} as registerLoginInfoType
			}
		},
		methods: {
			clickRegiter() {
				if(this.registerLoginInfo.tel.length <= 0) return 
				
				console.log(this.registerLoginInfo)
				uni.showLoading({
					title: '登陆中'
				})
				uni.request<IResponse<IToken>>({
					url: BASE_URL + '/user/login/register',
					method: 'POST',
					data: {
						tel: this.registerLoginInfo.tel,  
						password: this.registerLoginInfo.password,  
						code: this.registerLoginInfo.code,   
					},
					success: (res) => {
						let r = res.data
						console.log('注册登录返回信息', r);
						if(r!.code == 200) {
							console.log(r);
							uni.setStorageSync('token', r!.data!.token)
							uni.navigateTo({
								url: '/pages/healthQuestion/healthQuestion'
							})
						} else {
							uni.showToast({
								title: '网络超时',
								icon: "none"
							})
						}
						
					},
					fail: (err) => {
						console.log(err);
						uni.showToast({
							title: "网络超时",
							icon: "none"
						})
					},
					complete:() => {
						uni.hideLoading()
					}
				})

			}
		},
		onLoad(options) {
			console.log(options)
			this.registerLoginInfo.tel = options["tel"] ?? ""
			this.registerLoginInfo.code = options["code"] ?? ""
			console.log(this.registerLoginInfo)
		}
	}
</script>

<style lang="scss" scoped>
	.validateCode {
		width: 100%;
		height: 100%;
		background-color: $uni-bg-color;
		.bg-img {
			width: 750rpx;
			position: absolute;
			top: 0;
		}
		.window {
			box-sizing: border-box;
			width: 650rpx;
			height: 766rpx;
			padding: 30rpx;
			margin: 300rpx auto 0 auto;
			background-color: $uni-bg-color-grey;
			border-radius: 48rpx;

			.space {
				margin-bottom: 62rpx;
			}

			.top {
				width: 600rpx;
				margin-bottom: 64rpx;

				.title {
					font-size: $uni-font-size-lg;
					color: #937152;
				}
			}

			.uni-input {
				width: 600rpx;
				height: 76rpx;
				border-radius: 32rpx;
				margin: 0 auto;
				padding-left: 10px;
				font-size: $uni-font-size-sm;
				background-color: $uni-bg-color;
			}

			.uni-input::placeholder {
				font-size: 28rpx;
				margin-left: 100rpx;
			}

			.btn-hover {
				background-color: #94806e;
			}

		}
	}
</style>