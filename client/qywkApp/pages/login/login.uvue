<template>
	<view class="login">
		<image class="bg-img" src="../../static/image/login/bg.png" mode="widthFix"></image>
		<view class="window flex flex-column  align-center">
			<view class="top flex align-center">
				<image src="../../static/image/login/chacha.png" mode="widthFix" style="width: 36rpx;margin-right: 10rpx;"></image>
				<text class="title justify-start">登录</text>
			</view>
			<input v-model="loginInfo.username" class="uni-input space" placeholder="账号/手机号" />
			<input v-model="loginInfo.password" class="uni-input space" password type="text" placeholder="密码" />
			<button class="space" hover-class="btn-hover" @click="clickLogin"
				style="width: 600rpx;height: 76rpx;border-radius: 32rpx;color: #fff;line-height: 76rpx;text-align: center;background-color: #b19983;">登录</button>
			<view class="sub space flex justify-between">
				<view class="forget"><text class="text">忘记密码</text></view>
				<view class="sign-up"><text class="text">手机注册</text></view>
			</view>
			<view class="icons flex justify-around">
				<image class="img-icon" src="../../static/image/login/QQ.png" mode="widthFix"></image>
				<image class="img-icon" src="../../static/image/login/weixin.png" mode="widthFix"></image>
				<image class="img-icon" src="../../static/image/login/weibo.png" mode="widthFix"></image>
			</view>
		</view>
	</view>
</template>

<script lang="uts">
	import type { TloginInfo, IToken } from "@/common/type/user.uts"
	import type { IResponse } from "@/common/type/http.uts"
	import { BASE_URL } from "@/config/index.uts"
	
	// import Http from "@/utils/http"
	// import utils from "@/utils/utils.uts"
	
	export default {
		data() {
			return {
				loginInfo: {
					username: '',
					password: ''
				} as TloginInfo
			}
		},
		methods: {
			clickLogin() {
				if((this.loginInfo.username.length <= 0) || (this.loginInfo.password.length <= 0)) return 
				
				console.log(this.loginInfo);
				// Http.post('/qywk/login/normal', this.loginInfo)
				uni.request<IResponse<IToken>>({
					url: BASE_URL + '/qywk/login/normal',
					method: 'POST',
					data: {
						username: this.loginInfo.username,
						password: this.loginInfo.password
					},
					dataType: 'json',
					success: (res) => {
						let r = res.data
						console.log('登录返回信息', r);
						if(r!.code == 200) {
							uni.setStorageSync('token', r!.data!.token)
							uni.reLaunch({
								url: '/pages/index/index',
							})
						} else {
							
							uni.showToast({
								title: "账号或密码错误",
								icon: "none"
							})
						}
						
					},
					fail: (err) => {
						console.log(err);
						uni.showToast({
							title: "账号或密码错误",
							icon: "none"
						})
					}
				})

			}
		}
	}
</script>

<style lang="scss" scoped>
	.login {
		width: 100%;
		height: 100%;
		background-color: $uni-bg-color;
		.bg-img {
			width: 750rpx;
			position: absolute;
			top: 0;
		}
		.window {
			box-sizing: border-box;
			width: 650rpx;
			height: 766rpx;
			padding: 30rpx;
			margin: 300rpx auto 0 auto;
			background-color: $uni-bg-color-grey;
			border-radius: 48rpx;

			.space {
				margin-bottom: 62rpx;
			}

			.top {
				width: 600rpx;
				margin-bottom: 64rpx;

				.title {
					font-size: $uni-font-size-lg;
					color: #937152;
				}
			}

			.uni-input {
				width: 600rpx;
				height: 76rpx;
				border-radius: 32rpx;
				margin: 0 auto;
				padding-left: 10px;
				font-size: $uni-font-size-sm;
				background-color: $uni-bg-color;
			}

			.uni-input::placeholder {
				font-size: 28rpx;
				margin-left: 100rpx;
			}

			.btn-hover {
				background-color: #94806e;
			}

			.sub {
				width: 600rpx;

				.text {
					font-size: $uni-font-size-sm;
					color: #937152;
				}
			}

			.icons {
				width: 500rpx;
				height: 56rpx;

				.img-icon {
					width: 56rpx;
					height: 56rpx;
				}
			}
		}
	}
</style>