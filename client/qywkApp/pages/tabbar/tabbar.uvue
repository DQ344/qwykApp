<template>
	<!-- #ifdef APP -->
	<scroll-view style="flex:1">
	<!-- #endif -->
	
	<view v-show="tabIndex === 0">
		<showWindow></showWindow>
	</view>
	<view v-show="tabIndex === 1">
		<community></community>
	</view>	
	<view v-show="tabIndex === 2">
		<home></home>
	</view>	
	<view v-show="tabIndex === 3">
		<healthComponent></healthComponent>
	</view>	
	<view v-show="tabIndex === 4">
		<myPage></myPage>
	</view>
	
		<view class="tabbar">
			<view class="tab-item" @click="changeTab(0)">
				<image class="tab-icon" :src="0 === tabIndex ? tabs[0].selectedIcon : tabs[0].unselectedIcon" mode="widthFix"></image>
				<text :class="['tab-text', 0 === tabIndex ? 'active-text' : '']">{{ tabs[0].name }}</text>
			</view>
			<view class="tab-item" @click="changeTab(1)">
				<image class="tab-icon" :src="1 === tabIndex ? tabs[1].selectedIcon : tabs[1].unselectedIcon" mode="widthFix"></image>
				<text :class="['tab-text', 1 === tabIndex ? 'active-text' : '']">{{ tabs[1].name }}</text>
			</view>
			
			<view class="tab-item" @click="changeTab(2)" :style="[tabIndex == 2 ? 'display: visible;' : 'display: none;']">
				<view class="bg-img">
					<image class="center-icon" :src="tabs[2].selectedIcon" mode="widthFix"></image>
				</view>
			</view>
			<view class="tab-item" @click="changeTab(2)" v-if="tabIndex !== 2">
				<image class="tab-icon" :src="tabs[2].unselectedIcon" mode="widthFix"></image>
				<text :class="['tab-text', 2 === tabIndex ? 'active-text' : '']">{{ tabs[2].name }}</text>
			</view>
			
			<view class="tab-item" @click="changeTab(3)">
				<image class="tab-icon" :src="3 === tabIndex ? tabs[3].selectedIcon : tabs[3].unselectedIcon" mode="widthFix"></image>
				<text :class="['tab-text', 3 === tabIndex ? 'active-text' : '']">{{ tabs[3].name }}</text>
			</view>
			<view class="tab-item" @click="changeTab(4)">
				<image class="tab-icon" :src="4 === tabIndex ? tabs[4].selectedIcon : tabs[4].unselectedIcon" mode="widthFix"></image>
				<text :class="['tab-text', 4 === tabIndex ? 'active-text' : '']">{{ tabs[4].name }}</text>
			</view>
		</view>
		
		<!-- <ux-tabbar type="special" :index="tabIndex" anim="scroll" :iconSize="30" selectedColor="#965D30" unselectedColor="#808080"
			:data="tabs" :corner="20" :border="false" @change="tabChange">
			<template v-slot:center>
				<image @touchstart="handlerTouchstart" @touchmove="handlerTouchmove" @touchend="handlerTouchend"
					class="center-img" :src="[centerIndex === true ? '/static/image/tabBar/选择3.png' : '/static/image/tabBar/未选择3.png']" mode="widthFix"></image>
			</template>
		</ux-tabbar> -->
		
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->
</template>

<script>
	import { UxTab } from '@/uni_modules/ux-frame/libs/types/types.uts'

	export default {
		data() {
			return {
				tabIndex: 2,
				centerIndex: true,//  处于中间页面
				direction: 'right',
				loop: 0,
				clickShow: false,
				longClickShow: false,
				tabs: [
					{
						name: '展架',
						selectedIcon: '/static/image/tabBar/选择1.png',
						unselectedIcon: '/static/image/tabBar/未选择1.png',
					},
					{
						name: '集市',
						selectedIcon: '/static/image/tabBar/选择2.png',
						unselectedIcon: '/static/image/tabBar/未选择2.png',
					},
					{
						name: '植物',
						selectedIcon: '/static/image/tabBar/选择3.png',
						unselectedIcon: '/static/image/tabBar/未选择3.png',
					},
					{
						name: '膳食',
						selectedIcon: '/static/image/tabBar/选择4.png',
						unselectedIcon: '/static/image/tabBar/未选择4.png',
					},
					{
						name: '我的',
						selectedIcon: '/static/image/tabBar/选择5.png',
						unselectedIcon: '/static/image/tabBar/未选择5.png',
					}
				] as UxTab[],
				pageUrls: [
					'/pages/showWindow/showWindow',
					'/pages/community/community',
					'/pages/health/health',
					'/pages/myPage/myPage'
				]
			}
		},
		methods: {
			changeTab(index: number) {
				if(index === this.tabIndex) return
				this.tabIndex = index
				
			},
			handlerTouchstart() {
				this.loop = setTimeout(() => {
					this.loop = 0
					// 执行长按要执行的内容
					console.log('长按');
					
					this.clickShow = false
					this.longClickShow = true
				}, 500) // 定时的时间
				// return false
			},
			handlerTouchmove() {
				// 清除定时器
				clearTimeout(this.loop)
				this.loop = 0
			},
			handlerTouchend() {
				// 清除定时器
				clearTimeout(this.loop)
				if (this.loop !== 0) {
					// 单击操作
					console.log('单击');
					if(this.centerIndex === true) return
					
					this.centerIndex = true
					this.tabIndex = 2
					console.log(this.tabIndex, this.centerIndex);
					
					this.clickShow = true
					this.longClickShow = false
				}
			},
			tabChange(index : number) {
				this.centerIndex = false
				this.tabIndex = index
				console.log(index, this.tabIndex);
			}
		}
	}
</script>

<style lang="scss" scoped>
	.center-img {
		width: 40px;
	}
	.tabbar {
		position: fixed;
		z-index: 1000;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: #fff;
		width: 100%;
		height: 7%;
		overflow: visible;
		
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		align-items: center;
		
		.tab-item {
			width: 20%;
			height: 100%;
			overflow: visible;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			transition: all 2s ease;
			// 中间的特殊样式
			.bg-img {
				width: 70px;
				height: 70px;
				border-radius: 70px;
				background-color: $uni-bg-color;
				display: flex;
				justify-content: center;
				align-items: center;
				position: absolute;
				bottom: 16px;
				
				
				.center-icon {
					width: 52px;
					
				}
			}
			
			
			.tab-icon {
				width: 24px;
			}
			.tab-text {
				font-size: 12px;
				color: #808080;
			}
			.active-text {
				color: $uni-text-color;
			}
		}
	}
</style>