// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"qywk-server/apps/user/rpc/internal/logic"
	"qywk-server/apps/user/rpc/internal/svc"
	"qywk-server/apps/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

// 普通登陆
func (s *UserServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 微信快速登陆
func (s *UserServer) WechatLogin(ctx context.Context, in *user.WechatLoginReq) (*user.LoginResp, error) {
	l := logic.NewWechatLoginLogic(ctx, s.svcCtx)
	return l.WechatLogin(in)
}

// 手机号注册
func (s *UserServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 发送验证码
func (s *UserServer) SentCode(ctx context.Context, in *user.CodeReq) (*user.CodeResp, error) {
	l := logic.NewSentCodeLogic(ctx, s.svcCtx)
	return l.SentCode(in)
}

// 修改密码
func (s *UserServer) Change(ctx context.Context, in *user.ChangeReq) (*user.ChangeResp, error) {
	l := logic.NewChangeLogic(ctx, s.svcCtx)
	return l.Change(in)
}

// 忘记密码
func (s *UserServer) Forget(ctx context.Context, in *user.ForgetRep) (*user.ForgetResp, error) {
	l := logic.NewForgetLogic(ctx, s.svcCtx)
	return l.Forget(in)
}
