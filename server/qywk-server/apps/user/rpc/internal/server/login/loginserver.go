// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"qywk-server/apps/user/rpc/internal/logic/login"
	"qywk-server/apps/user/rpc/internal/svc"
	"qywk-server/apps/user/rpc/user"
)

type LoginServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedLoginServer
}

func NewLoginServer(svcCtx *svc.ServiceContext) *LoginServer {
	return &LoginServer{
		svcCtx: svcCtx,
	}
}

// 普通登陆
func (s *LoginServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := loginlogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 微信快速登陆
func (s *LoginServer) WechatLogin(ctx context.Context, in *user.WechatLoginReq) (*user.LoginResp, error) {
	l := loginlogic.NewWechatLoginLogic(ctx, s.svcCtx)
	return l.WechatLogin(in)
}

// 邮箱号注册
func (s *LoginServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := loginlogic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 发送验证码
func (s *LoginServer) SentCode(ctx context.Context, in *user.CodeReq) (*user.CodeResp, error) {
	l := loginlogic.NewSentCodeLogic(ctx, s.svcCtx)
	return l.SentCode(in)
}

// 修改密码
func (s *LoginServer) Change(ctx context.Context, in *user.ChangeReq) (*user.ChangeResp, error) {
	l := loginlogic.NewChangeLogic(ctx, s.svcCtx)
	return l.Change(in)
}

// 忘记密码
func (s *LoginServer) Forget(ctx context.Context, in *user.ForgetReq) (*user.ForgetResp, error) {
	l := loginlogic.NewForgetLogic(ctx, s.svcCtx)
	return l.Forget(in)
}
